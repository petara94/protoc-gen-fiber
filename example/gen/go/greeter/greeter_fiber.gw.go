// Code generated by protoc-gen-fiber. DO NOT EDIT.
package greeterpb

import (
	context "context"
	json "encoding/json"
	v2 "github.com/gofiber/fiber/v2"
	utils "github.com/petara94/protoc-gen-go-fiber/utils"
	grpc "google.golang.org/grpc"
	metadata "google.golang.org/grpc/metadata"
)

func RegisterGreeterServiceFiberRoutes(app *v2.App, server GreeterServiceServer, interceptor grpc.UnaryServerInterceptor) {
	app.Post("api/v1/hello", __GreeterService_SayHello_Route)
}

func __GreeterService_SayHello_Route(c *v2.Ctx) error {
	ctx, cancel := context.WithCancel(c.Context())
	defer cancel()

	md := metadata.New(nil)
	c.Request().Header.VisitAll(func(key, value []byte) {
		md.Append(string(key), string(value))
	})

	ctx = metadata.NewIncomingContext(ctx, md)

	var req HelloRequest
	if err := json.Unmarshal(c.Body(), &req); err != nil {
		return utils.HandleUnmarshalError(c, err)
	}

	if err := req.Validate(); err != nil {
		return utils.HandleValidationError(c, err)
	}

	handler := func(ctx context.Context, r any) (any, error) {
		return server.SayHello(ctx, r.(*HelloRequest))
	}

	info := &grpc.UnaryServerInfo{
		Server:     server,
		FullMethod: "/greeter.GreeterService/SayHello",
	}
	resp, err := interceptor(ctx, &req, info, handler)
	if err != nil {
		return utils.HandleGRPCStatusError(c, err)
	}

	return c.JSON(resp)
}
